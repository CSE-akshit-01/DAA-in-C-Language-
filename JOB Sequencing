#include <stdio.h>

struct Work {
    char id;        
    int deadline;  
    int profit;     
};
void sort(struct Work works[], int n) {
    for (int i = 0; i < n - 1; i++) 
    {
        for (int j = 0; j < n - i - 1; j++)
        {
            if (works[j].profit < works[j + 1].profit)
            {
                struct Work temp = works[j];
                works[j] = works[j + 1];
                works[j + 1] = temp;
            }
        }
    }
    
    int deadlinemax = works[0].deadline;
    for (int i = 1; i < n; i++)
    {
        if (works[i].deadline > deadlinemax)
        {
            deadlinemax = works[i].deadline;
        }
    }

    
    int timeslot[deadlinemax + 1];  
    for (int i = 0; i <= deadlinemax; i++)
    {
        timeslot[i] = -1;  
    }
    
    int filledSlots = 0;
    
    for (int i = 0; i < n; i++) {
        int k = (works[i].deadline < deadlinemax) ? works[i].deadline : deadlinemax;
        
        while (k >= 1) {
            if (timeslot[k] == -1) {
                timeslot[k] = i;
                filledSlots++;
                break;
            }
            k--; 
        }

        if (filledSlots == deadlinemax) {
            break; 
        }
    }

    printf("\nRequired Jobs: ");
    for (int i = 1; i <= deadlinemax; i++) {
        if (timeslot[i] != -1) {
            printf("%c", works[timeslot[i]].id);
            if (i < deadlinemax) {
                printf(" --> ");
            }
        }
    }
    printf("\n");

    int maxProfit = 0;
    for (int i = 1; i <= deadlinemax; i++) {
        if (timeslot[i] != -1) {
            maxProfit += works[timeslot[i]].profit;
        }
    }
    printf("Max Profit = %d\n", maxProfit);
}

int main() {
    struct Work works[] = {
        {'A', 3, 100},
        {'B', 4, 20},
        {'C', 2, 30},
        {'D', 1, 25},
        {'E', 3, 45}
    };

    int n = sizeof(works) / sizeof(works[0]);
    sort(works, n);

    return 0;
}
